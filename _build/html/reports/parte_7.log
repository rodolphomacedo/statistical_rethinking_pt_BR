Traceback (most recent call last):
  File "/home/rodolpho/Projects/bayesian/BAYES/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/rodolpho/Projects/bayesian/BAYES/lib/python3.8/site-packages/nbclient/client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/rodolpho/Projects/bayesian/BAYES/lib/python3.8/site-packages/nbclient/util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/rodolpho/Projects/bayesian/BAYES/lib/python3.8/site-packages/nbclient/util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/rodolpho/Projects/bayesian/BAYES/lib/python3.8/site-packages/nbclient/client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "/home/rodolpho/Projects/bayesian/BAYES/lib/python3.8/site-packages/nbclient/client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/rodolpho/Projects/bayesian/BAYES/lib/python3.8/site-packages/nbclient/client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
model = """
    data {
        int N;
        vector[N] brain;
        vector[N] body;
    }
    
    parameters {
        real alpha;
        real beta[3];
        real<lower=0> sigma;
    }
    
    model {
        vector[N] mu;
        
        mu = alpha + beta[1] * body   + 
                     beta[2] * body^2 +
                     beta[3] * body^3;
                     
        // Likelihood
        brain ~ normal(mu, sigma);
        
        // Prioris
        alpha ~ normal(0.5, 1);
        for (j in 1:3){
            beta[j] ~ normal(0, 10);
        }
        sigma ~ lognormal(0, 1);    
    }
"""

data = {
    'N': len(d.brain_std),
    'brain': d.brain_std.values,
    'body': d.mass_std.values,
}

posteriori_3 = stan.build(model, data=data)
samples_3 = posteriori_3.sample(num_chains=4, num_samples=1000)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mValueError[0m                                Traceback (most recent call last)
[0;32m/tmp/ipykernel_34512/3527731407.py[0m in [0;36m<module>[0;34m[0m
[1;32m     37[0m }
[1;32m     38[0m [0;34m[0m[0m
[0;32m---> 39[0;31m [0mposteriori_3[0m [0;34m=[0m [0mstan[0m[0;34m.[0m[0mbuild[0m[0;34m([0m[0mmodel[0m[0;34m,[0m [0mdata[0m[0;34m=[0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     40[0m [0msamples_3[0m [0;34m=[0m [0mposteriori_3[0m[0;34m.[0m[0msample[0m[0;34m([0m[0mnum_chains[0m[0;34m=[0m[0;36m4[0m[0;34m,[0m [0mnum_samples[0m[0;34m=[0m[0;36m1000[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Projects/bayesian/BAYES/lib/python3.8/site-packages/stan/model.py[0m in [0;36mbuild[0;34m(program_code, data, random_seed)[0m
[1;32m    517[0m [0;34m[0m[0m
[1;32m    518[0m     [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 519[0;31m         [0;32mreturn[0m [0masyncio[0m[0;34m.[0m[0mrun[0m[0;34m([0m[0mgo[0m[0;34m([0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    520[0m     [0;32mexcept[0m [0mKeyboardInterrupt[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    521[0m         [0;32mreturn[0m  [0;31m# type: ignore[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Projects/bayesian/BAYES/lib/python3.8/site-packages/nest_asyncio.py[0m in [0;36mrun[0;34m(main, debug)[0m
[1;32m     33[0m         [0mtask[0m [0;34m=[0m [0masyncio[0m[0;34m.[0m[0mensure_future[0m[0;34m([0m[0mmain[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     34[0m         [0;32mtry[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 35[0;31m             [0;32mreturn[0m [0mloop[0m[0;34m.[0m[0mrun_until_complete[0m[0;34m([0m[0mtask[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     36[0m         [0;32mfinally[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     37[0m             [0;32mif[0m [0;32mnot[0m [0mtask[0m[0;34m.[0m[0mdone[0m[0;34m([0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Projects/bayesian/BAYES/lib/python3.8/site-packages/nest_asyncio.py[0m in [0;36mrun_until_complete[0;34m(self, future)[0m
[1;32m     88[0m                 raise RuntimeError(
[1;32m     89[0m                     'Event loop stopped before Future completed.')
[0;32m---> 90[0;31m             [0;32mreturn[0m [0mf[0m[0;34m.[0m[0mresult[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     91[0m [0;34m[0m[0m
[1;32m     92[0m     [0;32mdef[0m [0m_run_once[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/lib/python3.8/asyncio/futures.py[0m in [0;36mresult[0;34m(self)[0m
[1;32m    176[0m         [0mself[0m[0;34m.[0m[0m__log_traceback[0m [0;34m=[0m [0;32mFalse[0m[0;34m[0m[0;34m[0m[0m
[1;32m    177[0m         [0;32mif[0m [0mself[0m[0;34m.[0m[0m_exception[0m [0;32mis[0m [0;32mnot[0m [0;32mNone[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 178[0;31m             [0;32mraise[0m [0mself[0m[0;34m.[0m[0m_exception[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    179[0m         [0;32mreturn[0m [0mself[0m[0;34m.[0m[0m_result[0m[0;34m[0m[0;34m[0m[0m
[1;32m    180[0m [0;34m[0m[0m

[0;32m/usr/lib/python3.8/asyncio/tasks.py[0m in [0;36m__step[0;34m(***failed resolving arguments***)[0m
[1;32m    278[0m                 [0;31m# We use the `send` method directly, because coroutines[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m    279[0m                 [0;31m# don't have `__iter__` and `__next__` methods.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 280[0;31m                 [0mresult[0m [0;34m=[0m [0mcoro[0m[0;34m.[0m[0msend[0m[0;34m([0m[0;32mNone[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    281[0m             [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    282[0m                 [0mresult[0m [0;34m=[0m [0mcoro[0m[0;34m.[0m[0mthrow[0m[0;34m([0m[0mexc[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Projects/bayesian/BAYES/lib/python3.8/site-packages/stan/model.py[0m in [0;36mgo[0;34m()[0m
[1;32m    484[0m [0;34m[0m[0m
[1;32m    485[0m             [0;32mif[0m [0mresp[0m[0;34m.[0m[0mstatus[0m [0;34m!=[0m [0;36m201[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 486[0;31m                 [0mmatch[0m [0;34m=[0m [0mre[0m[0;34m.[0m[0msearch[0m[0;34m([0m[0;34mr"""ValueError\(['"](.*)['"]\)"""[0m[0;34m,[0m [0mresp[0m[0;34m.[0m[0mjson[0m[0;34m([0m[0;34m)[0m[0;34m[[0m[0;34m"message"[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    487[0m                 [0;32mif[0m [0;32mnot[0m [0mmatch[0m[0;34m:[0m  [0;31m# unknown error, should not happen[0m[0;34m[0m[0;34m[0m[0m
[1;32m    488[0m                     [0;32mraise[0m [0mRuntimeError[0m[0;34m([0m[0mresp[0m[0;34m.[0m[0mjson[0m[0;34m([0m[0;34m)[0m[0;34m[[0m[0;34m"message"[0m[0;34m][0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/Projects/bayesian/BAYES/lib/python3.8/site-packages/stan/common.py[0m in [0;36mjson[0;34m(self)[0m
[1;32m     23[0m     [0;32mdef[0m [0mjson[0m[0;34m([0m[0mself[0m[0;34m)[0m [0;34m->[0m [0mdict[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m     24[0m         [0;31m# mypy 0.961 complains that simdjson lacks a `loads`.[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 25[0;31m         [0;32mreturn[0m [0msimdjson[0m[0;34m.[0m[0mloads[0m[0;34m([0m[0mself[0m[0;34m.[0m[0mcontent[0m[0;34m)[0m  [0;31m# type: ignore[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     26[0m [0;34m[0m[0m
[1;32m     27[0m [0;34m[0m[0m

[0;32m~/Projects/bayesian/BAYES/lib/python3.8/site-packages/simdjson/__init__.py[0m in [0;36mloads[0;34m(s, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kwargs)[0m
[1;32m     50[0m     """
[1;32m     51[0m     [0mparser[0m [0;34m=[0m [0mParser[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 52[0;31m     [0;32mreturn[0m [0mparser[0m[0;34m.[0m[0mparse[0m[0;34m([0m[0ms[0m[0;34m,[0m [0;32mTrue[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     53[0m [0;34m[0m[0m
[1;32m     54[0m [0;34m[0m[0m

[0;32msimdjson/csimdjson.pyx[0m in [0;36mcsimdjson.Parser.parse[0;34m()[0m

[0;31mValueError[0m: The JSON document has an improper structure: missing or superfluous commas, braces, missing keys, etc.
ValueError: The JSON document has an improper structure: missing or superfluous commas, braces, missing keys, etc.

